[{"/Users/jukovero/Desktop/Projects/tonttihaku/src/App.tsx":"1","/Users/jukovero/Desktop/Projects/tonttihaku/src/index.tsx":"2","/Users/jukovero/Desktop/Projects/tonttihaku/src/root/storeConfig.ts":"3","/Users/jukovero/Desktop/Projects/tonttihaku/src/root/rootReducer.ts":"4","/Users/jukovero/Desktop/Projects/tonttihaku/src/counter/counter.tsx":"5","/Users/jukovero/Desktop/Projects/tonttihaku/src/root/rootSaga.ts":"6","/Users/jukovero/Desktop/Projects/tonttihaku/src/counter/saga.ts":"7","/Users/jukovero/Desktop/Projects/tonttihaku/src/counter/types.ts":"8","/Users/jukovero/Desktop/Projects/tonttihaku/src/counter/actions.ts":"9","/Users/jukovero/Desktop/Projects/tonttihaku/src/counter/reducer.ts":"10","/Users/jukovero/Desktop/Projects/tonttihaku/src/counter/components/counterButtons.tsx":"11","/Users/jukovero/Desktop/Projects/tonttihaku/src/reportWebVitals.ts":"12","/Users/jukovero/Desktop/Projects/tonttihaku/src/root/routes.tsx":"13","/Users/jukovero/Desktop/Projects/tonttihaku/src/topNavigation/topNavigation.tsx":"14","/Users/jukovero/Desktop/Projects/tonttihaku/src/counter/counterPage.tsx":"15","/Users/jukovero/Desktop/Projects/tonttihaku/src/frontPage/frontPage.tsx":"16","/Users/jukovero/Desktop/Projects/tonttihaku/src/errorPage/errorPage.tsx":"17","/Users/jukovero/Desktop/Projects/tonttihaku/src/footer/footer.tsx":"18","/Users/jukovero/Desktop/Projects/tonttihaku/src/language/types.ts":"19","/Users/jukovero/Desktop/Projects/tonttihaku/src/language/reducer.ts":"20","/Users/jukovero/Desktop/Projects/tonttihaku/src/language/actions.ts":"21","/Users/jukovero/Desktop/Projects/tonttihaku/src/topNavigation/translations.ts":"22","/Users/jukovero/Desktop/Projects/tonttihaku/src/frontPage/translations.ts":"23","/Users/jukovero/Desktop/Projects/tonttihaku/src/modal/modal.tsx":"24","/Users/jukovero/Desktop/Projects/tonttihaku/src/button/button.tsx":"25","/Users/jukovero/Desktop/Projects/tonttihaku/src/login/loginModal.tsx":"26","/Users/jukovero/Desktop/Projects/tonttihaku/src/button/closeButton.tsx":"27","/Users/jukovero/Desktop/Projects/tonttihaku/src/login/translations.ts":"28","/Users/jukovero/Desktop/Projects/tonttihaku/src/modal/confirmationModal.tsx":"29"},{"size":450,"mtime":1609852954745,"results":"30","hashOfConfig":"31"},{"size":803,"mtime":1609159947275,"results":"32","hashOfConfig":"31"},{"size":1231,"mtime":1609159391297,"results":"33","hashOfConfig":"31"},{"size":550,"mtime":1609839247264,"results":"34","hashOfConfig":"31"},{"size":826,"mtime":1609159911209,"results":"35","hashOfConfig":"31"},{"size":193,"mtime":1609838890639,"results":"36","hashOfConfig":"31"},{"size":494,"mtime":1609838873529,"results":"37","hashOfConfig":"31"},{"size":274,"mtime":1609168507210,"results":"38","hashOfConfig":"31"},{"size":560,"mtime":1609430727192,"results":"39","hashOfConfig":"31"},{"size":757,"mtime":1609763095879,"results":"40","hashOfConfig":"31"},{"size":786,"mtime":1609763088000,"results":"41","hashOfConfig":"31"},{"size":431,"mtime":1609839390700,"results":"42","hashOfConfig":"31"},{"size":1764,"mtime":1609340887161,"results":"43","hashOfConfig":"44"},{"size":2508,"mtime":1609763068626,"results":"45","hashOfConfig":"31"},{"size":1399,"mtime":1609763100169,"results":"46","hashOfConfig":"44"},{"size":1034,"mtime":1609763084116,"results":"47","hashOfConfig":"44"},{"size":238,"mtime":1609340249894,"results":"48","hashOfConfig":"44"},{"size":340,"mtime":1609346632198,"results":"49","hashOfConfig":"31"},{"size":117,"mtime":1609413177635,"results":"50","hashOfConfig":"31"},{"size":498,"mtime":1609763079793,"results":"51","hashOfConfig":"31"},{"size":232,"mtime":1609746759351,"results":"52","hashOfConfig":"31"},{"size":677,"mtime":1609415662432,"results":"53","hashOfConfig":"31"},{"size":464,"mtime":1609415833541,"results":"54","hashOfConfig":"31"},{"size":2038,"mtime":1609856360827,"results":"55","hashOfConfig":"31"},{"size":647,"mtime":1609854565885,"results":"56","hashOfConfig":"31"},{"size":1006,"mtime":1609856728067,"results":"57","hashOfConfig":"31"},{"size":1013,"mtime":1609855056196,"results":"58","hashOfConfig":"31"},{"size":259,"mtime":1609856653435,"results":"59","hashOfConfig":"31"},{"size":1623,"mtime":1609853213177,"results":"60","hashOfConfig":"31"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"paxugb",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"i0zv7g",{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"65"},{"filePath":"113","messages":"114","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"65"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jukovero/Desktop/Projects/tonttihaku/src/App.tsx",[],"/Users/jukovero/Desktop/Projects/tonttihaku/src/index.tsx",[],[],"/Users/jukovero/Desktop/Projects/tonttihaku/src/root/storeConfig.ts",[],"/Users/jukovero/Desktop/Projects/tonttihaku/src/root/rootReducer.ts",[],"/Users/jukovero/Desktop/Projects/tonttihaku/src/counter/counter.tsx",[],"/Users/jukovero/Desktop/Projects/tonttihaku/src/root/rootSaga.ts",[],"/Users/jukovero/Desktop/Projects/tonttihaku/src/counter/saga.ts",[],"/Users/jukovero/Desktop/Projects/tonttihaku/src/counter/types.ts",[],"/Users/jukovero/Desktop/Projects/tonttihaku/src/counter/actions.ts",[],"/Users/jukovero/Desktop/Projects/tonttihaku/src/counter/reducer.ts",[],[],"/Users/jukovero/Desktop/Projects/tonttihaku/src/counter/components/counterButtons.tsx",[],"/Users/jukovero/Desktop/Projects/tonttihaku/src/reportWebVitals.ts",[],"/Users/jukovero/Desktop/Projects/tonttihaku/src/root/routes.tsx",[],[],"/Users/jukovero/Desktop/Projects/tonttihaku/src/topNavigation/topNavigation.tsx",[],"/Users/jukovero/Desktop/Projects/tonttihaku/src/counter/counterPage.tsx",[],"/Users/jukovero/Desktop/Projects/tonttihaku/src/frontPage/frontPage.tsx",[],"/Users/jukovero/Desktop/Projects/tonttihaku/src/errorPage/errorPage.tsx",[],"/Users/jukovero/Desktop/Projects/tonttihaku/src/footer/footer.tsx",[],"/Users/jukovero/Desktop/Projects/tonttihaku/src/language/types.ts",[],"/Users/jukovero/Desktop/Projects/tonttihaku/src/language/reducer.ts",[],"/Users/jukovero/Desktop/Projects/tonttihaku/src/language/actions.ts",[],"/Users/jukovero/Desktop/Projects/tonttihaku/src/topNavigation/translations.ts",[],"/Users/jukovero/Desktop/Projects/tonttihaku/src/frontPage/translations.ts",[],"/Users/jukovero/Desktop/Projects/tonttihaku/src/modal/modal.tsx",["125","126","127","128","129","130","131","132","133","134"],"import React, { Component } from 'react';\nimport CloseButton from '../button/closeButton';\nimport classNames from 'classnames';\n\ninterface Props {\n  children?: any;\n  className?: string;\n  isOpen: boolean;\n  onClose: () => void;\n  title: string;\n  closeText: string;\n}\n\nclass Modal extends Component<Props> {\n  component: any\n\n  state = {\n    isClosing: false,\n    isOpening: false,\n  }\n\n  componentDidMount() {\n    // this.component.addEventListener('transitionend', this.transitionEnds);\n  }\n\n  componentWillUnmount() {\n    // this.component.removeEventListener('transitionend', this.transitionEnds);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if(!prevProps.isOpen && this.props.isOpen) {\n      this.setState({\n        isOpening: true,\n      });\n    } else if(prevProps.isOpen && !this.props.isOpen) {\n      this.setState({\n        isClosing: true,\n      });\n    }\n  }\n\n  setComponentRef = (element: any) => {\n    this.component = element;\n  }\n\n  transitionEnds = () => {\n    this.setState({\n      isClosing: false,\n      isOpening: false,\n    });\n  }\n\n  render(): JSX.Element {\n    const {\n      children,\n      className,\n      isOpen,\n      onClose,\n      title,\n      closeText,\n    } = this.props;\n    const {isClosing, isOpening} = this.state;\n\n    return (\n      <div ref={this.setComponentRef} className={classNames('modal', className, {'modal-open': isOpen})}>\n        <div className='modal__overlay'></div>\n        <div className='modal__wrapper'>\n\n          <div className='modal__header' hidden={!isOpen && !isClosing && !isOpening}>\n            <div className='modal__header_wrapper'>\n              <h1 className='title'>{title}</h1>\n              <CloseButton\n                className='position-topright'\n                onClick={onClose}\n                title='Sulje'\n              />\n            </div>\n          </div>\n          <div className='modal__content' hidden={!isOpen && !isClosing && !isOpening}>\n            {children}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Modal;\n","/Users/jukovero/Desktop/Projects/tonttihaku/src/button/button.tsx",["135","136","137"],"import React from 'react';\nimport classNames from 'classnames';\n\ninterface Props {\n  className?: string;\n  disabled?: boolean;\n  innerRef?: (element: any) => void;\n  onClick: () => void;\n  style?: Object;\n  text: string;\n  title?: string;\n  type?: string;\n}\n\nconst Button = ({\n  className, \n  disabled, \n  innerRef, \n  onClick, \n  style, \n  text, \n  title,\n}: Props) => {\n  return (\n    <button\n      ref={innerRef}\n      className={classNames('mvj-button', className)}\n      onClick={onClick}\n      disabled={disabled}\n      style={style}\n      title={title}\n      type={'button'}\n    >\n      {text}\n    </button>\n  );\n};\n\nexport default Button;\n","/Users/jukovero/Desktop/Projects/tonttihaku/src/login/loginModal.tsx",[],"/Users/jukovero/Desktop/Projects/tonttihaku/src/button/closeButton.tsx",["138","139","140"],"// @flow\nimport React from 'react';\nimport classNames from 'classnames';\n\n// import closeIcon from '$assets/icons/icon_close.svg';\n\ninterface Props {\n  onClick: () => void;\n  setReference?: (element: any) => void;\n  title?: string;\n  closeText?: string;\n  className?: string;\n}\n\nconst CloseButton = ({\n  onClick, \n  setReference, \n  title, \n  closeText,\n  className,\n}: Props): JSX.Element => {\n   \n  const handleSetReference = (element: any): void => {\n    if(element && setReference) {\n      setReference(element);\n    }\n  };\n\n  const handleKeyDown = (e: any) => {\n    if(e.keyCode === 13) {\n      e.preventDefault();\n      onClick();\n    }\n  };\n\n  return (\n    <button\n      ref={handleSetReference}\n      aria-label={closeText}\n      className={classNames('close-button-component', className)}\n      type={'button'}\n      title={title}\n      onClick={onClick}\n      onKeyDown={handleKeyDown}\n    >\n      {'x'} {/* <img src={closeIcon} alt={closeText} /> */}\n    </button>\n  );\n};\n\nexport default CloseButton;\n","/Users/jukovero/Desktop/Projects/tonttihaku/src/login/translations.ts",[],"/Users/jukovero/Desktop/Projects/tonttihaku/src/modal/confirmationModal.tsx",["141","142","143","144","145","146"],{"ruleId":"147","severity":1,"message":"148","line":6,"column":14,"nodeType":"149","messageId":"150","endLine":6,"endColumn":17,"suggestions":"151"},{"ruleId":"147","severity":1,"message":"148","line":15,"column":14,"nodeType":"149","messageId":"150","endLine":15,"endColumn":17,"suggestions":"152"},{"ruleId":"153","severity":1,"message":"154","line":22,"column":3,"nodeType":"155","messageId":"156","endLine":22,"endColumn":22},{"ruleId":"153","severity":1,"message":"154","line":26,"column":3,"nodeType":"155","messageId":"156","endLine":26,"endColumn":25},{"ruleId":"153","severity":1,"message":"154","line":30,"column":3,"nodeType":"155","messageId":"156","endLine":30,"endColumn":39},{"ruleId":"153","severity":1,"message":"154","line":42,"column":21,"nodeType":"157","messageId":"156","endLine":42,"endColumn":38},{"ruleId":"153","severity":1,"message":"158","line":42,"column":22,"nodeType":"159","messageId":"160","endLine":42,"endColumn":34},{"ruleId":"147","severity":1,"message":"148","line":42,"column":31,"nodeType":"149","messageId":"150","endLine":42,"endColumn":34,"suggestions":"161"},{"ruleId":"153","severity":1,"message":"154","line":46,"column":20,"nodeType":"157","messageId":"156","endLine":46,"endColumn":25},{"ruleId":"162","severity":1,"message":"163","line":60,"column":7,"nodeType":"159","messageId":"164","endLine":60,"endColumn":16},{"ruleId":"147","severity":1,"message":"148","line":7,"column":24,"nodeType":"149","messageId":"150","endLine":7,"endColumn":27,"suggestions":"165"},{"ruleId":"166","severity":2,"message":"167","line":9,"column":11,"nodeType":"159","messageId":"168","endLine":9,"endColumn":17},{"ruleId":"153","severity":1,"message":"154","line":15,"column":16,"nodeType":"157","messageId":"156","endLine":23,"endColumn":13},{"ruleId":"147","severity":1,"message":"148","line":9,"column":28,"nodeType":"149","messageId":"150","endLine":9,"endColumn":31,"suggestions":"169"},{"ruleId":"147","severity":1,"message":"148","line":23,"column":40,"nodeType":"149","messageId":"150","endLine":23,"endColumn":43,"suggestions":"170"},{"ruleId":"147","severity":1,"message":"148","line":29,"column":29,"nodeType":"149","messageId":"150","endLine":29,"endColumn":32,"suggestions":"171"},{"ruleId":"147","severity":1,"message":"148","line":10,"column":10,"nodeType":"149","messageId":"150","endLine":10,"endColumn":13,"suggestions":"172"},{"ruleId":"147","severity":1,"message":"148","line":18,"column":17,"nodeType":"149","messageId":"150","endLine":18,"endColumn":20,"suggestions":"173"},{"ruleId":"153","severity":1,"message":"154","line":20,"column":24,"nodeType":"157","messageId":"156","endLine":20,"endColumn":41},{"ruleId":"153","severity":1,"message":"158","line":20,"column":25,"nodeType":"159","messageId":"160","endLine":20,"endColumn":37},{"ruleId":"147","severity":1,"message":"148","line":20,"column":34,"nodeType":"149","messageId":"150","endLine":20,"endColumn":37,"suggestions":"174"},{"ruleId":"153","severity":1,"message":"154","line":24,"column":3,"nodeType":"155","messageId":"156","endLine":24,"endColumn":39},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["175","176"],["177","178"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionExpression","missingReturnType","ArrowFunctionExpression","Argument 'element' should be typed with a non-any type.","Identifier","anyTypedArg",["179","180"],"@typescript-eslint/no-unused-vars","'closeText' is assigned a value but never used.","unusedVar",["181","182"],"@typescript-eslint/ban-types","Don't use `Object` as a type. The `Object` type actually means \"any non-nullish value\", so it is marginally better than `unknown`.\n- If you want a type meaning \"any object\", you probably want `Record<string, unknown>` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","bannedTypeMessage",["183","184"],["185","186"],["187","188"],["189","190"],["191","192"],["193","194"],{"messageId":"195","fix":"196","desc":"197"},{"messageId":"198","fix":"199","desc":"200"},{"messageId":"195","fix":"201","desc":"197"},{"messageId":"198","fix":"202","desc":"200"},{"messageId":"195","fix":"203","desc":"197"},{"messageId":"198","fix":"204","desc":"200"},{"messageId":"195","fix":"205","desc":"197"},{"messageId":"198","fix":"206","desc":"200"},{"messageId":"195","fix":"207","desc":"197"},{"messageId":"198","fix":"208","desc":"200"},{"messageId":"195","fix":"209","desc":"197"},{"messageId":"198","fix":"210","desc":"200"},{"messageId":"195","fix":"211","desc":"197"},{"messageId":"198","fix":"212","desc":"200"},{"messageId":"195","fix":"213","desc":"197"},{"messageId":"198","fix":"214","desc":"200"},{"messageId":"195","fix":"215","desc":"197"},{"messageId":"198","fix":"216","desc":"200"},{"messageId":"195","fix":"217","desc":"197"},{"messageId":"198","fix":"218","desc":"200"},"suggestUnknown",{"range":"219","text":"220"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"219","text":"221"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"222","text":"220"},{"range":"222","text":"221"},{"range":"223","text":"220"},{"range":"223","text":"221"},{"range":"224","text":"220"},{"range":"224","text":"221"},{"range":"225","text":"220"},{"range":"225","text":"221"},{"range":"226","text":"220"},{"range":"226","text":"221"},{"range":"227","text":"220"},{"range":"227","text":"221"},{"range":"228","text":"220"},{"range":"228","text":"221"},{"range":"229","text":"220"},{"range":"229","text":"221"},{"range":"230","text":"220"},{"range":"230","text":"221"},[160,163],"unknown","never",[322,325],[909,912],[150,153],[200,203],[438,441],[557,560],[222,225],[383,386],[421,424]]